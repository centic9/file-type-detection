apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = JavaVersion.VERSION_17

mainClassName = 'org.dstadler.filesearch.LookForFileType'
applicationDefaultJvmArgs = ['-Xmx1g', '-XX:+HeapDumpOnOutOfMemoryError']
version = '1.0'

jar {
    manifest {
        attributes 'Implementation-Title': 'Application to walk a directory and print out detected media-types as JSON to stdout', 'Implementation-Version': archiveVersion
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'commons-io:commons-io:2.18.0'
	implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'org.dstadler:commons-dost:1.3.4'
    implementation 'com.google.guava:guava:33.4.6-jre'

	implementation 'org.apache.tika:tika-core:3.1.0'
	implementation 'org.apache.tika:tika-parsers:3.1.0'
	implementation 'org.apache.tika:tika-parsers-standard-package:3.1.0'
	implementation 'org.apache.tika:tika-parser-sqlite3-package:3.1.0'
	implementation 'org.apache.tika:tika-parser-scientific-package:3.1.0'

    implementation 'com.google.code.gson:gson:2.11.0'

	implementation 'org.slf4j:slf4j-simple:2.0.17'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.12.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.12.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.12.1'
    testImplementation 'org.dstadler:commons-test:1.0.0.21'
}

wrapper {
    gradleVersion = '8.5'
}

test {
    useJUnitPlatform()
}
